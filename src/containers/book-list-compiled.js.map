{"version":3,"sources":["book-list.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;;;;;;;IAEM,Q;;;;;;;;;;;qCACW;AAAA;;AACT,mBAAO,KAAK,KAAL,CAAW,KAAX,CAAiB,GAAjB,CAAqB,UAAC,IAAD,EAAU;AAClC,uBACI;AAAA;AAAA;AACI,6BAAK,KAAK,KADd;AAEI,iCAAS;AAAA,mCAAM,OAAK,KAAL,CAAW,UAAX,CAAsB,IAAtB,CAAN;AAAA,yBAFb;AAGI,mCAAU,iBAHd;AAIK,yBAAK;AAJV,iBADJ;AAQH,aATM,CAAP;AAUH;;;iCAEQ;AACL,mBACI;AAAA;AAAA,kBAAI,WAAU,qBAAd;AACK,qBAAK,UAAL;AADL,aADJ;AAKH;;;;;;AAGL,SAAS,eAAT,CAAyB,KAAzB,EAAgC;AAC5B;AACA,WAAO;AACH,eAAO,MAAM;AADV,KAAP;AAGH;;AAED;AACA,SAAS,kBAAT,CAA4B,QAA5B,EAAsC;AAClC;AACA,WAAO,+BAAmB,EAAE,6BAAF,EAAnB,EAAgD,QAAhD,CAAP;AACH;;AAED;AACA;AACA;kBACe,yBAAQ,eAAR,EAAyB,kBAAzB,EAA6C,QAA7C,C","file":"book-list-compiled.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { selectBook } from '../actions/index';\nimport { bindActionCreators } from 'redux';\n\nclass BookList extends Component {\n    renderList() {\n        return this.props.books.map((book) => {\n            return (\n                <li\n                    key={book.title}\n                    onClick={() => this.props.selectBook(book)}\n                    className=\"list-group-item\">\n                    {book.title}\n                </li>\n            );\n        })\n    }\n\n    render() {\n        return(\n            <ul className=\"list-group col-sm-4\">\n                {this.renderList()}\n            </ul>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    // Whatever is returned will show up as props inside of BookList\n    return {\n        books: state.books\n    };\n}\n\n// Anything returned from this function will end up as props on the BookList container\nfunction mapDispatchToProps(dispatch) {\n    // Whenever selectBook is called, the result should be passed to all of our reducers\n    return bindActionCreators({ selectBook: selectBook } , dispatch);\n}\n\n// Promote BookList from a component to a container\n// - it needs to know about this new dispatch method, selectBook.\n// Make it available as a prop.\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList);"]}